{"version":3,"sources":["components/profile/profile.module.css","components/transaction/transaction.module.css","components/statistics/statistics.module.css","components/friendList/friendList.module.css","App.module.css","components/profile/Profile.jsx","components/statistics/Statistics.jsx","components/friendList/FriendList.jsx","components/transaction/TransactionHistory.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["module","exports","Profile","avatar","name","tag","location","stats","className","styles","profile","src","alt","statsItem","label","quantity","followers","views","likes","Statistics","title","statistics","statList","map","statisticalData","item","percentage","id","FriendListItem","isOnline","friendList","isOffline","width","FriendList","friends","TransactionHistory","items","transactionHistory","thead","th","transactions","i","type","amount","currency","App","app","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8cde5c3f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__FOwjt\",\"list\":\"profile_list__2acRm\",\"avatar\":\"profile_avatar__1jKK_\",\"name\":\"profile_name__3H8Dj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"transaction_transactionHistory__36I8_\",\"thead\":\"transaction_thead__3Fh8n\",\"th\":\"transaction_th__2P-Bo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistics_statistics__kh-jp\",\"title\":\"statistics_title__2t_f4\",\"statList\":\"statistics_statList__2DK6u\",\"item\":\"statistics_item__255Ee\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"friendList_friendList__1LOkl\",\"item\":\"friendList_item__-xEn9\",\"isOffline\":\"friendList_isOffline__1IV43\",\"isOnline\":\"friendList_isOnline__i12ax\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\"};","import styles from \"./profile.module.css\";\nimport PropTypes from 'prop-types'\n\nconst Profile = ({ avatar, name, tag, location, stats }) => {\n  \n  return (\n    <div className={styles.profile}>\n      <div className=\"profile\">\n        <div className=\"description\">\n          <img\n            src={avatar}\n            alt=\"Аватар пользователя\"\n            className={styles.avatar}\n          />\n          <p className={styles.name}>{name}</p>\n          <p>@{tag}</p>\n          <p>{location}</p>\n        </div>\n        <ul className=\"stats\">\n          <li className={styles.statsItem}>\n            <span className={styles.label}>Followers</span>\n            <span className={styles.quantity}>{stats.followers}</span>\n          </li>\n          <li className={styles.statsItem}>\n            <span className={styles.label}>Views</span>\n            <span className={styles.quantity}>{stats.views}</span>\n          </li>\n          <li className={styles.statsItem}>\n            <span className={styles.label}>Likes</span>\n            <span className={styles.quantity}>{stats.likes}</span>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n  \nProfile.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n\n\nexport default Profile;\n","import styles from './statistics.module.css'\n\nconst Statistics = ({ stats, title }) => {\n  return (\n    <section className={styles.statistics}>\n      {title && <h2 className={styles.title}>{title}</h2>}\n      <ul className={styles.statList}>\n        {stats.map((statisticalData) => (\n          <li className={styles.item} key={statisticalData.id}>\n            {statisticalData.label} {statisticalData.percentage} %\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\n\nexport default Statistics;\n","import styles from \"./friendList.module.css\";\nimport PropTypes from 'prop-types'\n\nconst FriendListItem = ({ avatar, name, isOnline }) => {\n  return (\n    <div className={styles.friendList}>\n      <li className={styles.item}>\n        <span\n          className={isOnline ? `${styles.isOnline}` : `${styles.isOffline}`}\n        ></span>\n        <img\n          className=\"avatar\"\n          src={avatar}\n          alt={`${name} avatar`}\n          width=\"48\"\n        />\n        <p className=\"name\">{name}</p>\n      </li>\n    </div>\n  );\n};\n\nconst FriendList = ({ friends }) => {\n  return (\n    <ul className=\"friend-list\">\n      {friends.map(({ id, avatar, name, isOnline }) => (\n        <FriendListItem\n          key={id}\n          isOnline={isOnline}\n          avatar={avatar}\n          name={name}\n        />\n      ))}\n    </ul>\n  );\n};\n\n\nFriendList.propTypes = {\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n    })\n  ),\n};\n\nexport default FriendList;\n","import styles from \"./transaction.module.css\";\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <table className={styles.transactionHistory}>\n      <thead className={styles.thead}>\n        <tr>\n          <th className={styles.th}>Type</th>\n          <th className={styles.th}>Amount</th>\n          <th className={styles.th}>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map((transactions, i) => (\n          <tr key={i}>\n            <td>{transactions.type}</td>\n            <td>{transactions.amount} </td>\n            <td>{transactions.currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default TransactionHistory;\n","import styles from \"./App.module.css\";\nimport Description from \"./components/profile/Profile\";\nimport user from \"./user.json\";\nimport Statistics from \"./components/statistics/Statistics\";\nimport statisticalData from \"./statistical-data.json\";\nimport FriendList from \"./components/friendList/FriendList\";\nimport friends from './friends.json'\nimport TransactionHistory from \"./components/transaction/TransactionHistory\";\nimport transactions from './transactions.json'\n\n\nfunction App() {\n \n  return (\n    <div className={styles.app}>\n      <Description\n        avatar={user.avatar}\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        stats={user.stats}\n      />\n      <Statistics stats={statisticalData} title=\"Upload stats\" />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}